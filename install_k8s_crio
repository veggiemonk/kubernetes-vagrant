#!/bin/bash

wget https://github.com/opencontainers/runc/releases/download/v1.0.0-rc6/runc.amd64
sudo mv runc.amd64 /usr/bin/runc
chmod +x /usr/bin/runc

sudo modprobe overlay
sudo modprobe br_netfilter

# Setup required sysctl params, these persist across reboots.
cat <<EOF | sudo tee -a /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF

sudo sysctl --system

sudo apt-get update
sudo apt-get install -y apt-transport-https software-properties-common socat iproute iptables
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
cat <<EOF > /etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF

sudo add-apt-repository ppa:projectatomic/ppa

sudo apt-get update
# Install CRI-O kubernetes
sudo apt-get install -y cri-o-1.11 kubelet kubeadm kubectl

sudo systemctl start crio

# kubelet requires swap off
sudo swapoff -a
# keep swap off after reboot
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

# sed -i '/ExecStart=/a Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs"' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
sed -i '0,/ExecStart=/s//Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs"\n&/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

RUNTIME_ENDPOINT=/var/run/crio/crio.sock

cat <<EOF | sudo tee -a /etc/systemd/system/kubelet.service.d/20-cri.conf
[Service]
Environment="KUBELET_EXTRA_ARGS=--container-runtime=remote --container-runtime-endpoint=$RUNTIME_ENDPOINT"
EOF
sudo systemctl daemon-reload


# Get the IP address that VirtualBox has given this VM
#IPADDR=`ifconfig enp0s8 | grep Mask | awk '{print $2}'| cut -f2 -d:`
IPADDR=$(ifconfig eth1 | grep Mask | awk '{print $2}'| cut -f2 -d:)
echo This VM has IP address "$IPADDR"

# Set up Kubernetes
kubeadm config images pull --cri-socket="$RUNTIME_ENDPOINT"
NODENAME=$(hostname -s)
kubeadm init --apiserver-cert-extra-sans="$IPADDR"  --node-name "$NODENAME" --cri-socket="$RUNTIME_ENDPOINT" --kubernetes-version=v1.11

# Set up admin creds for the vagrant user
echo Copying credentials to /home/vagrant...
sudo --user=vagrant mkdir -p /home/vagrant/.kube
cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
chown "$(id -u vagrant):$(id -g vagrant)" /home/vagrant/.kube/config
